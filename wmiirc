#!/usr/bin/env python2.6
# vi:sw=2:ts=2:expandtab

import wmii
import wmii.event
import libpurple
import remind
import display
import traceback

def launchIMClient(event):
  libpurple.finch().run()

def changeResolution(event):
  print 'change resolution'
  #display.changeDisplays(layout='--right-of')
  display.changeDisplays()

def showPresentation(event):
  display.selectAndPresent()

def wmiiCommand(file, command=None, action='create'):
  import subprocess
  ret = None
  p = subprocess.Popen(['wmiir', action, file],
      stdin=subprocess.PIPE, stdout=subprocess.PIPE)
  if command is not None:
    p.stdin.write(command.encode())
    p.stdin.close()
  if action == 'read':
    ret = [x.strip() for x in p.stdout.readlines()]
  p.wait()
  return ret

def send2ndScreen(event):
  try:
    client = wmiiCommand('/client/sel/ctl', action='read')[0]
  except:
    wmii.status.display('No window selected')
    return
  wmiiCommand('/client/%s/tags' % client,
      str.join('+', map(str,range(10))), 'write')
  for tag in range(10):
    wmiiCommand('/tag/%d/ctl'%tag, 'send %s 1:1'%client, 'write')
  #wmiiCommand('/client/%s/ctl'%client, 'Fullscreen on', 'write')

if __name__ == '__main__':
  try:
    events = wmii.event.dispatcher()

    # To allow phased transition from shell=>python
    # This is racey and should be removed once transition complete
    import subprocess
    import time
    import os
    shellscript=os.environ['WMII_CONFPATH'].partition(':')[0] + '/wmiirc-real'
    print 'Executing', shellscript
    subprocess.Popen(shellscript, shell=True)
    events.waitForEvent('SHELL DONE') # Event dispatched at the end of *my* script to minimise race. Still races with system wmii.rc
    time.sleep(1.0) # Give wi_readkeys a chance to register it's key bindings (racey, but only alternative is to edit /usr/bin/wmii.rc)

    events.readWmiiKeys() # Don't override the shell script's bindings

    events.regKeyHandler('Mod4-a', launchIMClient)
    events.regKeyHandler('Mod4-F5', changeResolution)
    events.regKeyHandler('Mod4-F6', showPresentation)
    events.regKeyHandler('Mod4-Shift-grave', send2ndScreen)
    remind.remind()

    events.mainloop()
  except:
    msg = traceback.format_exc()
    wmii.dispLongMsg("Exception in main:\n"+msg)
